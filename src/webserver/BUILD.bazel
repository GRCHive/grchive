package(default_visibility=["//visibility:public"])
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

filegroup(
    name = "templates",
    srcs = glob([
        "templates/**/*.tmpl"
    ])
)

genrule(
    name = "config_files",
    srcs = select({
        "//:production": ["config/prod.toml"],
        "//conditions:default": ["config/dev.toml"],
    }),
    outs = ["config/config.toml"],
    cmd = "cp $< $@"
)

go_library(
    name = "webserver_render_library",
    srcs = [
        "render/pages.go",
        "render/templates.go",
        "render/params.go",
        "render/error.go",
    ],
    deps = [
        "//src/webserver/core:webserver_core_library",
        "//src/webserver/webcore:webserver_webcore_library",
    ],
    importpath = "gitlab.com/b3h47pte/audit-stuff/render"
)

go_library(
    name = "webserver_websocket_library",
    srcs = [
        "websocket/websocket.go",
        "websocket/processFlowNodeDisplaySettings.go"
    ],
    deps = [
        "//src/webserver/core:webserver_core_library",
        "//src/webserver/database:webserver_database_library",
        "//src/webserver/webcore:webserver_webcore_library",
        "@com_github_gorilla_mux//:go_default_library",
        "@com_github_gorilla_websocket//:go_default_library",
    ],
    importpath = "gitlab.com/b3h47pte/audit-stuff/websocket"
)

go_binary(
    name = "webserver",
    srcs = [
        "main.go",
        "dashboard.go",
    ],
    deps = [
        "@com_github_gorilla_mux//:go_default_library",
        "//src/webserver/core:webserver_core_library",
        "//src/mail_api/golang:mail_golang_api",
        "//src/okta_api/golang:okta_golang_api",
        "//src/vault_api/golang:vault_golang_api",
        "//src/webserver/webcore:webserver_webcore_library",
        "//src/webserver/database:webserver_database_library",
        ":webserver_render_library",
        "//src/webserver/rest:webserver_rest_library",
        ":webserver_websocket_library",
    ],
    data = [
        ":templates",
        "//src/core/jsui:corejsui-assets",
        ":config_files"
    ] + select({
        "//:production": ["//src/core/jsui:corejsui-nosmap"],
        "//conditions:default": ["//src/core/jsui:corejsui-smap"],
    })

)
