self_uri = "${GRCHIVE_URI}"
self_domain = "${GRCHIVE_DOMAIN}"

[company]
company_name = "GRCHive"
domain = "grchive.com"

[database]
connection = "${POSTGRES_HOST}:${POSTGRES_PORT}/audit?sslmode=disable&timezone=UTC"
username = "${POSTGRES_USER}"
password = "${POSTGRES_PASSWORD}"

[okta]
url = "${OKTA_URL}"
api_key = "${OKTA_KEY}"
api_endpoint = "/api"
users_endpoint = "/v1/users"

[login]
authserver_endpoint = "/oauth2/default"
auth_endpoint = "/v1/authorize"
token_endpoint = "/v1/token"
key_endpoint = "/v1/keys"
logout_endpoint = "/v1/logout"
auth_audience = "api://default"
time_drift_leeway_seconds = 60

[login.params]
client_id = "${OKTA_CLIENT_ID}"
client_secret = "${OKTA_CLIENT_SECRET}"
response_type = "code" 
response_mode = "query"
scope = "openid email offline_access groups profile"
redirect_uri = "/authorization-code/callback"
grant_type = "authorization_code"

[security]
session_keys = [
    "${SECURITY_KEY_0}",
    "${SECURITY_KEY_1}"
]
use_secure_cookies = false
hmac_key = "${HMAC_KEY}"

[vault]
url = "${VAULT_HOST}:${VAULT_PORT}"

[vault.userpass]
username = "${VAULT_USER}"
password = "${VAULT_PASSWORD}"

[gcloud]
credentials_file = "devops/gcloud/gcloud-webserver-account.json"

[gcloud.storage]
doc_bucket = "${GRCHIVE_DOC_BUCKET}"

[mail]
provider = "sendgrid"
key = "${SENDGRID_KEY}"

[mail.verification.from]
name = "GRCHive Support"
email = "support@grchive.com"

[hashids]
salt = "7409d5d933caf02affce"
min_length = 8

[rabbitmq]
username = "${RABBITMQ_USER}"
password = "${RABBITMQ_PASSWORD}"
host = "${RABBITMQ_HOST}"
port = ${RABBITMQ_PORT}
use_tls = ${RABBITMQ_TLS}

[tls]
root_ca = "${ROOT_CA_CRT}"

[grpc.query_runner]
host = "${GRPC_QUERY_RUNNER_HOST}"
port = ${GRPC_QUERY_RUNNER_PORT}

[grpc.query_runner.tls]
enable = ${GRPC_QUERY_RUNNER_TLS}
cert = "/opt/certs/query_runner/query-runner-service.crt"
key = "/opt/certs/query_runner/query-runner-service.key"

[registry]

[registry.gitlab]
username = "${GKE_REGISTRY_USER}"
password = "${GKE_REGISTRY_PASSWORD}"

[kotlin]
bucket = "${KOTLIN_LIB_BUCKET}"

[gitea]
protocol = "${GITEA_PROTOCOL}"
host = "${GITEA_HOST}"
port = ${GITEA_PORT}
token = "${GITEA_TOKEN}"

[drone]
protocol = "${DRONE_SERVER_PROTO}"
host = "${DRONE_SERVER_HOST}"
port = ${DRONE_SERVER_PORT}
token = "${DRONE_TOKEN}"
runner_type = "${DRONE_RUNNER_TYPE}"

[features]
automation = true

[artifactory]
host = "${ARTIFACTORY_HOST}"
port = ${ARTIFACTORY_PORT}
