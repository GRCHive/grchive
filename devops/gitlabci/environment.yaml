.common-before-script: &common-before-script
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "build -c opt" >> .bazelrc
    - echo "run -c opt" >> .bazelrc
    - echo "build --disk_cache=$CI_PROJECT_DIR/.cache" >> .bazelrc
    - echo "build --action_env=DOCKER_HOST" >> .bazelrc
    - echo "run --action_env=DOCKER_HOST" >> .bazelrc
    - echo "build --action_env=DOCKER_DRIVER" >> .bazelrc
    - echo "run --action_env=DOCKER_DRIVER" >> .bazelrc
    - echo "build --action_env=DOCKER_TLS_CERTDIR" >> .bazelrc
    - echo "run --action_env=DOCKER_TLS_CERTDIR" >> .bazelrc
    - echo "build --action_env=DOCKER_TLS_VERIFY" >> .bazelrc
    - echo "run --action_env=DOCKER_TLS_VERIFY" >> .bazelrc
    - echo "build --action_env=DOCKER_CERT_PATH" >> .bazelrc
    - echo "run --action_env=DOCKER_CERT_PATH" >> .bazelrc
    - envsubst < build/variables.bzl.prod.tmpl > build/variables.bzl
    - cp -r /python ./dependencies/python

.production-before-script: &production-before-script:
    - *common-before-script
    - echo $GCLOUD_WEBSERVER_ACCOUNT > devops/gcloud/gcloud-webserver-account.json
    - echo $GCLOUD_TERRAFORM_ACCOUNT > devops/gcloud/gcloud-terraform-account.json
    - echo $GCLOUD_KUBERNETES_ACCOUNT > devops/gcloud/gcloud-kubernetes-account.json
    - gcloud auth activate-service-account --key-file devops/gcloud/gcloud-kubernetes-account.json
    - gcloud config set project grchive
    - gcloud config set compute/zone us-central1-c

.staging-before-script: &staging-before-script:
    - *common-before-script
    - echo $STAGING_GCLOUD_WEBSERVER_ACCOUNT > devops/gcloud/gcloud-webserver-account.json
    - echo $STAGING_GCLOUD_TERRAFORM_ACCOUNT > devops/gcloud/gcloud-terraform-account.json
    - echo $STAGING_GCLOUD_KUBERNETES_ACCOUNT > devops/gcloud/gcloud-kubernetes-account.json
    - gcloud auth activate-service-account --key-file devops/gcloud/gcloud-kubernetes-account.json
    - gcloud config set project grchive
    - gcloud config set compute/zone us-central1-c
